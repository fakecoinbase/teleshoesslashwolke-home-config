#!/usr/bin/perl
use strict;
use warnings;

sub klompSyncLocal($$$$$);
sub runOrDie(@);

my $usage = "Usage:
  $0 -h|--help
    show this message

  $0 IPMAGIC_NAME [LIB LIB LIB]
    perform klomp-sync remotely or locally for the intended device
    with optional LIBREGEX=\"LIB|LIB|LIB..\"

    IPMAGIC_NAME = n900
      run klomp-sync locally on /media/n900
        e.g.: klomp-sync --local n900-local-klomp-lib \"1|2|3\"
";

sub main(@){
  if(@_ == 1 and $_[0] =~ /^(-h|--help)$/){
    print "$usage\n";
    exit 0;
  }

  my $ipmagicName;
  if(@_ > 0){
    $ipmagicName = shift;
  }else{
    die $usage;
  }

  my $libRegex = join "|", @_;

  if($ipmagicName eq "n900"){
    klompSyncLocal(
      $libRegex,
      "n900",
      "/media/n900",
      "$ENV{HOME}/Code/n900/klomp/local-klomp-lib",
      "29999.29999",
    );

    my $host = `ipmagic n900`;
    chomp $host;
    runOrDie "scp", "$ENV{HOME}/.klompdb", "user\@$host:~";
  }else{
    die "$usage\n\nERROR: unknown ipmagic name \"$ipmagicName\"\n";
  }
}

#1) optionally mount an sdcard or hard drive
#2) klomp-sync to locally mounted storage using a klomp-lib in the filesystem
#3) optionally chown the entire destination klomp library dir
#4) run `sync` to wait for the data to be written fully to disk
#5) optionally umount the sdcard or hard drive
sub klompSyncLocal($$$$$){
  my ($libRegex, $mntName, $targetDir, $localKlompLib, $chownUserGroup) = @_;
  if(defined $mntName){
    runOrDie "sudo", "mnt", "-l", $mntName;
  }

  runOrDie "sudo", "klomp-sync", "--local", $localKlompLib, $libRegex;
  if(defined $chownUserGroup){
    runOrDie "sudo", "chown", $chownUserGroup, "-R", $targetDir;
  }

  runOrDie "sync";

  if(defined $mntName){
    runOrDie "sudo", "mnt", "-u", $mntName;
  }
}

sub runOrDie(@){
  print "@_\n";
  system @_;
  die "'@_' failed\n" if $? != 0;
}

&main(@ARGV);
