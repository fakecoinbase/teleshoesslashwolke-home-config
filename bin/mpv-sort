#!/usr/bin/perl
use strict;
use warnings;
use Time::HiRes qw(time);
use File::Basename qw(basename);

my $EXEC = basename $0;

my $MPV_INPUT_CONF = "$ENV{HOME}/.config/mpv/input.conf";

my $usage = "Usage:
  $EXEC [-h|--help]
    show this message

  $EXEC FILE [FILE FILE ..]
    plays FILEs after checking that they all exist,
      adding key bindings to help sort them into folders
    -add INPUT bindings:
      -if it exists, prepend bindings from $MPV_INPUT_CONF
        (new bindings take precedence)
      -keys 0-9 to exit with exit codes 100-109, respectively
      -key p to exit with 110
      -key n to exit with 111
      -key ENTER to exit with 111
    -play each file in mpv, one at a time
    -if mpv exits with exit code between 100-109, move video to a dir in the CWD called:
      ./$EXEC-<EXIT_CODE>/
      and go to next file
    -if mpv exits with exit code 110, go back to the previous file
       -if the file was moved to $EXEC-<EXIT_CODE>/, use the new path for the file
       -if the file does not exist at all, continue going backward until one does exist
       -if there are no existing previous files, re-open the same file
    -if mpv exits with exit code 111 (or any other exit code), go to the next file
    -use --no-clobber to prevent overwriting files with the same name
";

my $inputConf = "
0 quit 100
1 quit 101
2 quit 102
3 quit 103
4 quit 104
5 quit 105
6 quit 106
6 quit 106
7 quit 107
8 quit 108
9 quit 109

p quit 110
n quit 111

ENTER quit 111
";

sub main(@){
  if(@_ == 0 or (@_ == 1 and $_[0] =~ /^(-h|--help)$/)){
    print $usage;
    exit 0;
  }
  my @files = @_;
  for my $file(@files){
    die "could not find file: $file\n" if not -f $file;
  }
  if(-f $MPV_INPUT_CONF){
    open FH, "< $MPV_INPUT_CONF" or die "could not read $MPV_INPUT_CONF\n$!\n";
    $inputConf = join('', <FH>) . "\n$inputConf";
    close FH;
  }

  my $nowMillis = int(time * 1000.0 + 0.5);
  my $inputConfFile = "/tmp/$EXEC-input-$nowMillis.conf";
  open FH, "> $inputConfFile" or die "could not write $inputConfFile\n$!\n";
  print FH $inputConf;
  close FH;

  my $i = 0;
  while(0 <= $i and $i < @files){
    my $file = $files[$i];
    print "\n\n===== $file\n";
    if(not -e $file){
      die "FILE $file DOES NOT EXIST\n";
    }

    system "mpv", "--loop", "--input-conf=$inputConfFile", $file;
    my $exitCode = $? >> 8;
    if(100 <= $exitCode && $exitCode <= 109){
      my $dir = "./$EXEC-$exitCode";
      system "mkdir", "-p", "$dir/";
      my $fileBaseName = basename $file;
      my $newFilePath = "$dir/$fileBaseName";
      system "mv", "--no-clobber", $file, $newFilePath;
      if($? != 0){
        die "error moving $file\n";
      }else{
        $files[$i] = $newFilePath;
      }
      $i++;
    }elsif($exitCode == 110){
      my $prevIndex = $i - 1;
      while(0 <= $prevIndex and $prevIndex < @files and not -e $files[$prevIndex]){
        $prevIndex--;
      }

      if(0 <= $prevIndex and $prevIndex < @files and -e $files[$prevIndex]){
        $i = $prevIndex;
      }else{
        $i = $i;
      }
    }elsif($exitCode == 111){
      $i++;
    }else{
      $i++;
    }
  }

  system "rm", $inputConfFile;
}

&main(@ARGV);
