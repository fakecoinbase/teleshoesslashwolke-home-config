#!/usr/bin/perl
use strict;
use warnings;
use Time::HiRes qw(time);
use Cwd 'abs_path';

my $emailDir = "$ENV{HOME}/.cache/email";
my $tmpPrefix = "/tmp/emlview-";
my $viewCmd = "icedove --offline -file";

sub viewFiles(@);

my $usage = "Usage:
  $0 FILE [FILE FILE ..]
    make symlinks ending in '.eml' to each given file
    place symlinks in dir '$tmpPrefix-<MILLIS>/'
    open each symlink with '$viewCmd <PATH-TO-SYMLINK>'

  $0 ACC [FOLDER] UID [UID UID ..]
    equivalent to:
      cd $emailDir/<ACC>/<FOLDER>/bodies/
      $0 <UID> [<UID> <UID> ..]
";

sub main(@){
  if(@_ > 0 and -d "$emailDir/$_[0]"){
    my $acc = shift;

    my $folder = shift if @_ > 0 and -d "$emailDir/$acc/$_[0]";
    $folder = "inbox" if not defined $folder;
    my $bodiesDir = "$emailDir/$acc/$folder/bodies";
    die "$usage\ncould not find dir: $bodiesDir\n" if not -d $bodiesDir;

    my @uids = @_;
    die $usage if @uids == 0;
    my @files;
    for my $uid(@uids){
      my $file = "$bodiesDir/$uid";
      die "$usage\ninvalid UID: $uid\n" if not -f $file;
      push @files, $file;
    }
    viewFiles @files;
  }else{
    viewFiles @_;
  }
}

sub viewFiles(@){
  my @files = @_;
  my $dir = $tmpPrefix . int(time*1000);
  system "mkdir", "-p", "$dir";
  my $id = 0;
  my @newFiles;
  for my $file(@files){
    $file = abs_path $file;
    my $name = $file;
    $name =~ s/^.*\/([^\/]+)$/$1/g;
    $name = lc $name;
    $name =~ s/\W+/_/g;
    $name =~ s/^_//;
    $name =~ s/_$//;

    $name .= "_" . $id++;
    my $newFile = "$dir/$name.eml";
    system "ln", "-s", $file, $newFile;
    push @newFiles, $newFile;
  }

  for my $file(@newFiles){
    system "$viewCmd $file >/dev/null 2>/dev/null &";
    sleep 1;
  }
}

&main(@ARGV);
