#!/usr/bin/perl
use strict;
use warnings;

my $STATE_FILE = "$ENV{HOME}/.pulse-enabled";
my $PULSE_CONFIG_DIR = "$ENV{HOME}/.config/pulse";
my $LOG_DIR = "$ENV{HOME}/.cache/logs";

my $usage = "Usage:
  $0 [OPTS] [get]
    default action. check $STATE_FILE and either:
    print \"enabled\" and exit with exit code 0
    or
    print \"disabled\" and exit with exit code 1

  $0 [OPTS] on
    (re)start pulseaudio and write \"enabled\" to $STATE_FILE

  $0 [OPTS] off
    kill pulseaudio and write \"disabled\" to $STATE_FILE

  $0 [OPTS] toggle
    same as:
      if $0 get; then
        $0 off
      else
        $0 on

  OPTS:
    -q  do not print anything
";

sub main(@){
  my $quiet = shift if @_ > 0 and $_[0] =~ /^(-q)$/;

  my $okArgs = join "|", qw(get on off toggle);

  my $arg = shift;
  $arg = "get" if not defined $arg;
  die $usage if @_ > 0 or $arg !~ /^($okArgs)$/;

  $arg = get() ? "off" : "on" if $arg =~ /^(toggle)$/;

  if($arg =~ /^(get)$/){
    if(get()){
      print "enabled\n" if not $quiet;
      exit 0;
    }else{
      print "disabled\n" if not $quiet;
      exit 1;
    }
  }elsif($arg =~ /^(on)$/){
    print "(re)starting pulse\n" if not $quiet;
    ensurePulse(1);
    set(1);
  }elsif($arg =~ /^(off)$/){
    print "killing pulse\n" if not $quiet;
    ensurePulse(0);
    set(0);
  }
}

sub ensurePulse($){
  system "pkill", "pulseaudio";
  my @files = grep {$_ !~ /default\.pa$/} glob "$PULSE_CONFIG_DIR/*";
  system "rm", @files if @files > 0;
  if($_[0]){
    system "mkdir", "-p", $LOG_DIR;
    system "nohup pulseaudio 2>&1 >$LOG_DIR/pulseaudio.log &";
  }
}

sub get(){
  my $state = `cat $STATE_FILE 2>/dev/null`;
  if($state =~ /disabled/){
    return 0;
  }else{
    return 1;
  }
}

sub set($){
  my $state = $_[0] ? "enabled" : "disabled";
  system "echo $state > $STATE_FILE";
}

&main(@ARGV);
