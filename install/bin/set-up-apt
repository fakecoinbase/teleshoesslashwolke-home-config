#!/usr/bin/perl
use strict;
use warnings;
use lib `dirname $0 | tr -d '\n'`;
use ScriptScript;

sub addKeys();

sub main(@) {
    getRoot @_;

    print "\n### Adding architectures.\n";
    run qw(dpkg --add-architecture i386);

    print "\n### Adding keys.\n";
    addKeys();

    my $repos = getInstallPath "repos";
    my $sources = "/etc/apt/sources.list.d";
    my $now = `date +%Y-%m-%dT%H%M%S`; chomp $now;
    my $backup = "$sources.$now";

    my @rsyncLines = procLines "rsync", "-n", "--del", "-rlptDv", "$repos/", "$sources";
    my $cnt = @rsyncLines;
    @rsyncLines = map {"$_\n"} @rsyncLines;
    if (@rsyncLines != 4) {
        print "\n### Updating repo lists.\n";
        run "mv", $sources, $backup;
        run "mkdir", $sources;
        run "rsync", "-rlptDv", "$repos/", $sources;
    } else {
        print "\n### sources lists have not changed.\n";
    }
}

sub addKeys(){
    my %gpgKeys = readConfDir getInstallPath("gpgkeys");
    for my $repo(keys %gpgKeys){
        my $gpgKey = ${$gpgKeys{$repo}}[0];
        print "\n### installing gpg key $repo => $gpgKey\n";
        runUser "gpg", "--keyserver", "pgpkeys.mit.edu", "--recv-key", $gpgKey;
        #runUser "gpg", "--keyserver", "keyserver.ubuntu.com", "--recv-key", $gpgKey;

        my $key = procUser "gpg", "-a", "--export", "\"$gpgKey\"";
        open CMD, "|-", "sudo apt-key add -" or die "failed to add key\n";
        print CMD $key;
        close CMD;
    }
}

&main(@ARGV);
