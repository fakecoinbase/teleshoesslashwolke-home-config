#!/usr/bin/perl
use strict;
use warnings;
use lib `dirname $0 | tr -d '\n'`;
use ScriptScript;

sub editMozillaPrefs($$$);
sub getShortcutJson();
sub globOne($);
sub amoUrl($);

my $addons = {
  adblockplus               => amoUrl(1865),
  dnsflusher                => amoUrl(7408),
  firebug                   => amoUrl(1843),
  greasemonkey              => amoUrl(748),
  httpseverywhere           => amoUrl(229918),
  keybinder                 => amoUrl(538504),
  liveclick                 => amoUrl(2499),
  noscript                  => amoUrl(722),
  sessionmanager            => amoUrl(2324),
  stylish                   => amoUrl(2108),
  textareacache             => amoUrl(5761),
  useragentswitcher         => amoUrl(59),
  webdeveloper              => amoUrl(60),
  youtubehighdefinition     => amoUrl(328839),
};

my $shortcutJsonRelpath =
  "jetpack/keybinder\@fail.cl/simple-storage/store.json";

my $prefs = {
  "middlemouse.contentLoadURL"  => "false",
  "browser.download.dir"        => "\"" . getHome() . "/Downloads\"",
  "ui.key.menuAccessKeyFocuses" => "false",
  "full-screen-api.approval-required" => "false",
};
my $shortcutKeys = {
  key_fullZoomEnlarge => [  ["control","shift"], "VK_UP" ],
  key_fullZoomReduce  => [  ["control","shift"], "VK_DOWN" ],
};

sub main(@){
  my $profileDir = globOne getHome() . "/.mozilla/firefox/*.default";
  die "Could not find profile dir" if not -d $profileDir;

  my $prefsJs = "$profileDir/prefs.js";
  die "Could not find prefs file\n" if not -f $prefsJs;
  editMozillaPrefs $prefsJs, "set-up-firefox", $prefs;

  my $shortcutsJson = "$profileDir/$shortcutJsonRelpath";
  my $dir = $shortcutsJson;
  $dir =~ s/\/[^\/]*$//;
  system "mkdir", "-p", $dir;

  warn "warning: could not find shorcuts JSON file\n" if not -f $shortcutsJson;
  writeFile $shortcutsJson, getShortcutJson();
}

sub editMozillaPrefs($$$) {
  my ($name, $patchname, $config) = @_;
  editFile $name, $patchname, sub {
    my $cnts = shift;
    for my $key(keys %$config){
      my $re = "user_pref.*$key";
      replaceOrAddLine $cnts, $re, "user_pref(\"$key\", $$config{$key});";
    }
    $cnts
  };
}

sub getShortcutJson(){
  my @overlays;
  for my $keyId(sort keys %$shortcutKeys){
    my ($mods, $keycode) = @{$$shortcutKeys{$keyId}};
    my $modArrStr = "[" . (join ",", map {"\"$_\""} @$mods) . "]";
    push @overlays, ''
      . '{'
        . '"_type":"overlay",'
        . '"key":'
        . '{'
          . '"_type":"key",'
          . '"id":"' . $keyId . '"'
        . '},'
        . '"shortcut":'
        . '{'
          . '"_type":"shortcut",'
          . '"keycode":"' . $keycode . '",'
          . '"modifiers":'
          . '{'
            . '"_type":"modifiers",'
            . '"modifiers":' . $modArrStr
          . '}'
        . '}'
      . '}'
    ;
  }
  return '{"overlays":[' . (join ",", @overlays) . ']}';
}
sub globOne($){
  my $pattern = shift;
  my @results = glob $pattern;
  if(@results == 1){
    return $results[0];
  }else{
    return undef;
  }
}
sub amoUrl($){
  my $id = shift;
  return "https://addons.mozilla.org/firefox/downloads/latest/$id/addon-$id-latest.xpi";
}

&main(@ARGV);
